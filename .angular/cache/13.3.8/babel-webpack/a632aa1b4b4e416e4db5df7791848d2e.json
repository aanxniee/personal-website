{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"angular-dark-mode\";\nimport * as i2 from \"@angular/common\";\nexport let DarkModeToggleComponent = /*#__PURE__*/(() => {\n  class DarkModeToggleComponent {\n    constructor(darkModeService) {\n      this.darkModeService = darkModeService;\n      this.darkMode$ = this.darkModeService.darkMode$;\n      this.darkModeOn = false;\n      this.onDarkModeChosen = new EventEmitter();\n    }\n\n    ngOnInit() {}\n\n    onToggle() {\n      this.darkModeService.toggle();\n      this.darkMode$.subscribe(data => this.darkModeOn = data);\n      this.onDarkModeChosen.emit(this.darkModeOn);\n    }\n\n  }\n\n  DarkModeToggleComponent.ɵfac = function DarkModeToggleComponent_Factory(t) {\n    return new (t || DarkModeToggleComponent)(i0.ɵɵdirectiveInject(i1.DarkModeService));\n  };\n\n  DarkModeToggleComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DarkModeToggleComponent,\n    selectors: [[\"app-dark-mode-toggle\"]],\n    outputs: {\n      onDarkModeChosen: \"onDarkModeChosen\"\n    },\n    decls: 5,\n    vars: 3,\n    consts: [[\"id\", \"darkMode\", \"type\", \"checkbox\", 1, \"toggle\", 3, \"checked\", \"change\"], [\"for\", \"darkMode\", 1, \"toggle-label\"], [\"src\", \"assets/sun.svg\", \"title\", \"Change to light mode!\", 1, \"moon\"], [\"src\", \"assets/moon.svg\", \"title\", \"Change to dark mode!\", 1, \"sun\"]],\n    template: function DarkModeToggleComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"input\", 0);\n        i0.ɵɵlistener(\"change\", function DarkModeToggleComponent_Template_input_change_0_listener() {\n          return ctx.onToggle();\n        });\n        i0.ɵɵpipe(1, \"async\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"label\", 1);\n        i0.ɵɵelement(3, \"img\", 2)(4, \"img\", 3);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"checked\", i0.ɵɵpipeBind1(1, 1, ctx.darkMode$));\n      }\n    },\n    pipes: [i2.AsyncPipe],\n    styles: [\"@media screen and (max-width: 768px){img[_ngcontent-%COMP%]{width:80vw}}.toggle[_ngcontent-%COMP%]{display:none}.toggle-label[_ngcontent-%COMP%]{position:absolute;display:inline-block;width:7rem;height:7rem;overflow:hidden;cursor:pointer}.sun[_ngcontent-%COMP%], .moon[_ngcontent-%COMP%]{position:absolute;left:0;width:70%;height:auto;transition:top .7s;-webkit-user-select:none;user-select:none}.sun[_ngcontent-%COMP%]{top:0}.moon[_ngcontent-%COMP%]{top:-150%}.toggle[_ngcontent-%COMP%]:checked + .toggle-label[_ngcontent-%COMP%]   .sun[_ngcontent-%COMP%]{top:150%}.toggle[_ngcontent-%COMP%]:checked + .toggle-label[_ngcontent-%COMP%]   .moon[_ngcontent-%COMP%]{top:0}\"]\n  });\n  return DarkModeToggleComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}